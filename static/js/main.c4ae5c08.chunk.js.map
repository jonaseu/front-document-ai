{"version":3,"sources":["components/Button/Button.jsx","components/ContainerUpload/ContainerUpload.js","components/Navbar/Navbar.jsx","components/MainBanner/MainBanner.jsx","components/ImageBanner/ImageBanner.jsx","App.js","index.js","images/logo.png"],"names":["Button","props","className","onClick","disabled","children","require","config","ACCEPTED_FILE_EXTENSIONS","png","jpg","pdf","ContainerUpload","useState","files","setFiles","disableBtn","setDisableBtn","validInput","setValidInput","waitingAPIFile","setwaitingAPIFile","initializeSocketWithApi","socket","socketIOClient","process","transports","on","receivedData","console","log","blob","Blob","file","type","url","URL","createObjectURL","link","document","createElement","setAttribute","name","click","close","useEffect","handleFileChange","event","receivedFiles","target","areFilesValid","receivedFilesValid","Object","values","map","validFiles","fileExtesion","toLowerCase","slice","size","ACCEPTED_MAX_FILE_SIZE_MB","push","handleUploadFile","a","fd","FormData","newDate","Date","now","toLocaleDateString","replace","toLocaleTimeString","f","append","axios","post","headers","response","data","body","Fragment","loadingText","animation","variant","for","id","onChange","multiple","invalidFileTypeWarning","currrentOption","Navbar","src","logo","MainBanner","title","subtitle","buttonText","ImageBanner","App","poolApi","hasApiConnection","setHasApiConnection","checkApiConnection","get","then","res","clearInterval","setInterval","logoImage","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c4ae5c08.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={props.className}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Button from \"../Button/Button\";\r\nimport \"./ContainerUpload.scss\";\r\nimport { BsCloudUpload } from \"react-icons/bs\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst ACCEPTED_FILE_EXTENSIONS = { png: true, jpg: true, pdf: true };\r\nconst ACCEPTED_MAX_FILE_SIZE_MB = 6.5;\r\n\r\nconst ContainerUpload = (props) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [disableBtn, setDisableBtn] = useState(true);\r\n  const [validInput, setValidInput] = useState(true);\r\n  const [waitingAPIFile, setwaitingAPIFile] = useState(false);\r\n\r\n  const loadButton = (loadingText) => {\r\n    return (\r\n      <div>\r\n        <ReactBootStrap.Spinner animation=\"border\" variant=\"warning\" />\r\n        <a>{loadingText}</a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const initializeSocketWithApi = () => {\r\n    const socket = socketIOClient(process.env.REACT_APP_API_URL, {\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n    socket.on(\"FileProcessing\", (receivedData) => {\r\n      console.log(receivedData);\r\n      var blob = new Blob([receivedData.file[0]], {\r\n        type: \"text/csv;charset=utf-8;\",\r\n      });\r\n\r\n      const url = URL.createObjectURL(blob);\r\n      var link = document.createElement(\"a\");\r\n      link.setAttribute(\"href\", url);\r\n      link.setAttribute(\"download\", `${receivedData.name}`);\r\n      link.click();\r\n    });\r\n    socket.on(\"Done\", () => {\r\n      setwaitingAPIFile(false);\r\n      socket.close();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {});\r\n\r\n  const handleFileChange = (event) => {\r\n    const receivedFiles = event.target.files;\r\n    var areFilesValid = true;\r\n\r\n    const receivedFilesValid = Object.values(receivedFiles).map((file) => {\r\n      let validFiles = [];\r\n\r\n      const fileExtesion = file.name.toLowerCase().slice(-3);\r\n      if (\r\n        ACCEPTED_FILE_EXTENSIONS[fileExtesion] === true &&\r\n        file.size < ACCEPTED_MAX_FILE_SIZE_MB * 1000000\r\n      ) {\r\n        validFiles.push(file);\r\n      } else {\r\n        areFilesValid = false;\r\n      }\r\n      console.log(file.size);\r\n      return validFiles;\r\n    });\r\n\r\n    if (areFilesValid) {\r\n      setFiles(receivedFilesValid);\r\n      setDisableBtn(false);\r\n      setValidInput(true);\r\n    } else {\r\n      setFiles([]);\r\n      setDisableBtn(true);\r\n      setValidInput(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadFile = async () => {\r\n    setwaitingAPIFile(true);\r\n    setDisableBtn(true);\r\n    setFiles([]);\r\n    let fd = new FormData();\r\n    const newDate = new Date(Date.now());\r\n    fd.name =\r\n      \"fileInput_\" +\r\n      newDate.toLocaleDateString().replace(/\\//g, \"-\") +\r\n      \"_\" +\r\n      newDate.toLocaleTimeString();\r\n    files.map((f) => {\r\n      fd.append(f[0].name, f[0], f[0].name);\r\n    });\r\n\r\n    const response = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}upload`,\r\n      fd,\r\n      {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }\r\n    );\r\n\r\n    console.log(`Files uploaded to ${process.env.REACT_APP_API_URL}upload`);\r\n    console.log(`Answer: ${response.data.body}`);\r\n    initializeSocketWithApi();\r\n  };\r\n\r\n  const invalidFileTypeWarning = () => {\r\n    if (!validInput) {\r\n      return (\r\n        <span>{`Invalid File Type Selected or file larger than ${ACCEPTED_MAX_FILE_SIZE_MB}Mb`}</span>\r\n      );\r\n    }\r\n  };\r\n\r\n  const currrentOption = () => {\r\n    if (waitingAPIFile) return loadButton(\"Estamos processando seus arquivos\");\r\n    else {\r\n      return (\r\n        <div className=\"upload-btngroup\">\r\n          <div className=\"upload-btngroup-btn\">\r\n            <label for=\"upload\">\r\n              <BsCloudUpload /> Adicionar arquivos...\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"upload\"\r\n              onChange={handleFileChange}\r\n              multiple\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            className=\"upload-btngroup-btn\"\r\n            onClick={handleUploadFile}\r\n            disabled={disableBtn}\r\n          >\r\n            Enviar\r\n          </Button>\r\n\r\n          {invalidFileTypeWarning()}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const ContainerUploadContent = (\r\n    <React.Fragment>\r\n      <div className=\"upload\">\r\n        <h1 className=\"upload-title\">Faça um teste você mesmo!</h1>\r\n        {currrentOption()}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return ContainerUploadContent;\r\n};\r\n\r\nexport default ContainerUpload;\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport \"./Navbar.scss\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <img className=\"navbar-logo\" src={props.logo} />\r\n      <Button className=\"navbar-btn\">Sign In</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./MainBanner.scss\";\r\n\r\nconst MainBanner = (props) => {\r\n  return (\r\n    <div className=\"mainbanner\">\r\n      <h1 className=\"mainbanner-title\">{props.title}</h1>\r\n      <div className=\"mainbanner-subtitle\">{props.subtitle}</div>\r\n      <button className=\"mainbanner-btn\">{props.buttonText}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBanner;\r\n","import React from \"react\";\r\nimport \"./ImageBanner.scss\";\r\n\r\nconst ImageBanner = (props) => {\r\n  return (\r\n    <div className=\"imagebanner\">\r\n      <div className=\"imagebanner-subtitle\">{props.subtitle}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageBanner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ContainerUpload from \"./components/ContainerUpload/ContainerUpload\";\r\nimport axios from \"axios\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport MainBanner from \"./components/MainBanner/MainBanner\";\r\nimport ImageBanner from \"./components/ImageBanner/ImageBanner\";\r\n\r\nimport logoImage from \"./images/logo.png\";\r\n\r\nconst App = () => {\r\n  const [hasApiConnection, setHasApiConnection] = useState(false);\r\n  let poolApi;\r\n\r\n  const checkApiConnection = async () => {\r\n    console.log(\r\n      `Checking communication with API at ${process.env.REACT_APP_API_URL}liveness`\r\n    );\r\n    try {\r\n      const checkLiveness = await axios\r\n        .get(`${process.env.REACT_APP_API_URL}liveness`)\r\n        .then((res) => {\r\n          setHasApiConnection(true);\r\n          clearInterval(poolApi);\r\n          console.log(\"API is communicating\");\r\n        });\r\n    } catch (e) {\r\n      setHasApiConnection(false);\r\n    }\r\n  };\r\n\r\n  const loadButton = (loadingText) => {\r\n    return (\r\n      <div>\r\n        <ReactBootStrap.Spinner animation=\"border\" variant=\"warning\" />\r\n        <a>{loadingText}</a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    poolApi = setInterval(() => {\r\n      checkApiConnection();\r\n    }, 10000);\r\n    checkApiConnection();\r\n  }, []);\r\n\r\n  let appContent;\r\n  if (hasApiConnection) {\r\n    appContent = (\r\n      <>\r\n        <Navbar logo={logoImage} />\r\n        <MainBanner\r\n          title=\"Documentos são essenciais para qualquer negócio, não deixe que isso seja um problema para o seu\"\r\n          subtitle=\"Docton busca simplificar o processamento desses documentos\"\r\n          buttonText=\"ENTENDA MAIS\"\r\n        />\r\n        <ImageBanner subtitle=\"Acelere e melhore processos de input manuais do seu negócio através de inteligência artificial\" />\r\n        <ContainerUpload />\r\n      </>\r\n    );\r\n  } else {\r\n    appContent = (\r\n      <>\r\n        <Navbar logo={logoImage} />\r\n        {loadButton(\"Esperando serviço inicializar\")}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return appContent;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.3d981ce9.png\";"],"sourceRoot":""}